name: Secret Scan

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  secret-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for better detection
    
    - name: Run gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
    
    - name: Custom secret pattern scan
      run: |
        echo "Scanning for common secret patterns..."
        
        # Check for hardcoded API keys and tokens
        if grep -r -E "(sk-[A-Za-z0-9]{20,}|pk_[A-Za-z0-9]{20,}|AC[a-zA-Z0-9]{32})" --exclude-dir=.git --exclude="*.md" --exclude=".env.example" .; then
          echo "❌ Found potential API keys or tokens in code"
          exit 1
        fi
        
        # Check for placeholder values that shouldn't be in production
        if grep -r -E "(CHANGE_ME|your_.*_key|your_.*_token|your_.*_secret)" --exclude-dir=.git --exclude="*.md" --exclude=".env.example" --exclude="test_*.py" .; then
          echo "❌ Found placeholder values in code"
          exit 1
        fi
        
        # Check for hardcoded URLs that should be in environment variables
        if grep -r -E "(https://api\.clerk\.dev|https://api\.twilio\.com|https://api\.deepgram\.com|https://api\.callrail\.com)" --exclude-dir=.git --exclude="*.md" --exclude=".env.example" --exclude="app/config.py" .; then
          echo "❌ Found hardcoded service URLs that should be in environment variables"
          exit 1
        fi
        
        echo "✅ No secrets or hardcoded values found"
    
    - name: Validate environment configuration
      run: |
        echo "Validating environment configuration..."
        
        # Check if .env.example exists and has required variables
        if [ ! -f ".env.example" ]; then
          echo "❌ .env.example file not found"
          exit 1
        fi
        
        # Check for required environment variables in .env.example
        required_vars=(
          "CLERK_SECRET_KEY"
          "CLERK_PUBLISHABLE_KEY"
          "TWILIO_ACCOUNT_SID"
          "TWILIO_AUTH_TOKEN"
          "CALLRAIL_API_KEY"
          "DEEPGRAM_API_KEY"
          "OPENAI_API_KEY"
        )
        
        for var in "${required_vars[@]}"; do
          if ! grep -q "^${var}=" .env.example; then
            echo "❌ Required environment variable ${var} not found in .env.example"
            exit 1
          fi
        done
        
        echo "✅ Environment configuration validation passed"
